{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexep\\\\dev\\\\test_tinoshenko\\\\src\\\\components\\\\Stocks\\\\Timer\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = ({\n  targetDate\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState({});\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentTime = new Date();\n      const difference = targetDate - currentTime;\n      if (difference <= 0) {\n        clearInterval(interval); // Остановим таймер, когда время выйдет\n      } else {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        const hours = Math.floor(difference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        const minutes = Math.floor(difference % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(difference % (1000 * 60) / 1000);\n        setTimeLeft({\n          days,\n          hours,\n          minutes,\n          seconds\n        });\n      }\n    }, 1000);\n    return () => clearInterval(interval); // Очистка интервала при размонтировании\n  }, [targetDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timer_block\",\n      children: [timeLeft.days, \" \\u0434\\u043D\\u0435\\u0439 \", timeLeft.hours, \" \\u0447\\u0430\\u0441\\u043E\\u0432 \", timeLeft.minutes, \" \\u043C\\u0438\\u043D\\u0443\\u0442 \", timeLeft.seconds, \" \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"5uulFLAJ1+sAR3u7SZegl5t7kHk=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownTimer","targetDate","_s","timeLeft","setTimeLeft","interval","setInterval","currentTime","Date","difference","clearInterval","days","Math","floor","hours","minutes","seconds","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Alexep/dev/test_tinoshenko/src/components/Stocks/Timer/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./Timer.css\"\r\nconst CountdownTimer = ({ targetDate }) => {\r\n  const [timeLeft, setTimeLeft] = useState({});\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const currentTime = new Date();\r\n      const difference = targetDate - currentTime;\r\n\r\n      if (difference <= 0) {\r\n        clearInterval(interval);  // Остановим таймер, когда время выйдет\r\n      } else {\r\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((difference % (1000 * 60)) / 1000);\r\n\r\n        setTimeLeft({ days, hours, minutes, seconds });\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);  // Очистка интервала при размонтировании\r\n  }, [targetDate]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Осталось времени:</h2>\r\n      <p className='timer_block'>{timeLeft.days} дней {timeLeft.hours} часов {timeLeft.minutes} минут {timeLeft.seconds} секунд</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountdownTimer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACpB,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;MAC9B,MAAMC,UAAU,GAAGR,UAAU,GAAGM,WAAW;MAE3C,IAAIE,UAAU,IAAI,CAAC,EAAE;QACnBC,aAAa,CAACL,QAAQ,CAAC,CAAC,CAAE;MAC5B,CAAC,MAAM;QACL,MAAMM,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC3D,MAAMK,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEJ,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACjF,MAAMM,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEJ,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;QACzE,MAAMO,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEJ,UAAU,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;QAE7DL,WAAW,CAAC;UAAEO,IAAI;UAAEG,KAAK;UAAEC,OAAO;UAAEC;QAAQ,CAAC,CAAC;MAChD;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMN,aAAa,CAACL,QAAQ,CAAC,CAAC,CAAE;EACzC,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtB,OAAA;MAAGuB,SAAS,EAAC,aAAa;MAAAL,QAAA,GAAEd,QAAQ,CAACQ,IAAI,EAAC,4BAAM,EAACR,QAAQ,CAACW,KAAK,EAAC,kCAAO,EAACX,QAAQ,CAACY,OAAO,EAAC,kCAAO,EAACZ,QAAQ,CAACa,OAAO,EAAC,uCAAO;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1H,CAAC;AAEV,CAAC;AAACnB,EAAA,CA7BIF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}